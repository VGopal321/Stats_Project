---
title: "Analysis 1"
output: html_document
date: '2022-07-23'
---


```{r Analysis 1}
library(ggplot2)
library(dplyr)
library(scales)
library(tidyr)
library(tidyverse)
#set directory for desktop
# setwd("/Users/apple/Desktop/Project 1/")


#reading in the csvs
test = read.csv("./Data Files/test.csv") #read test.csv
train = read.csv("./Data Files/train.csv") #read train.csv
#GrLivArea: Above grade (ground) living area square feet

train =train %>%filter(Neighborhood == "NAmes" | Neighborhood == "Edwards" | Neighborhood == "BrkSide" )
train =train %>%filter(SaleCondition != "Partial")
train =train %>%filter(SaleCondition !="Alloca")
train =train %>%filter(SaleCondition !="Abnorml")

#updating categories to numerics
train<-train %>% mutate(KitchenQual = case_when(KitchenQual == "TA" ~ 2, KitchenQual == "Gd" ~ 4, KitchenQual == "Fa" ~ 3, KitchenQual == "Ex" ~ 5, TRUE ~ 0 ))
train<-train %>% mutate(BsmtQual = case_when(BsmtQual == "TA" ~ 2, ExterCond == "Gd" ~ 4, ExterCond == "Fa" ~ 3, BsmtQual == "Ex" ~ 5, TRUE ~ 0))
train<-train %>% mutate(ExterCond = case_when(BsmtCond == "Po" ~ 2, BsmtCond == "TA" ~ 2, BsmtCond == "Gd" ~ 4, BsmtCond == "Fa" ~ 3, BsmtCond == "Ex" ~ 5, TRUE ~ 0))
train<-train %>% mutate(ExterCond = case_when(ExterCond == "TA" ~ 2, ExterCond == "Gd" ~ 4, ExterCond == "Fa" ~ 3, ExterCond == "Ex" ~ 5, TRUE ~ 0))
train<-train %>% mutate(HouseStyle = case_when(HouseStyle == "1.5Unf" ~ 1, HouseStyle == "1Story" ~ 1, HouseStyle == "1.5Fin" ~ 1, HouseStyle == "SLvl" ~ 1, HouseStyle == "2Story" ~ 2, HouseStyle == "2.5Unf" ~ 2, HouseStyle == "SFoyer" ~ 1, TRUE ~ 0 ))

#adding stone masonvnrarea
train <- mutate(train, Stone.MasVnrArea = ifelse(MasVnrType=="Stone", MasVnrArea, 0))
train <- mutate(train, MasVnrArea = ifelse(MasVnrType!="Stone", MasVnrArea, 0))

train<-train %>% mutate(BldgType = case_when(BldgType == "1Fam" ~ 2, TRUE ~ 1))
train$yearssincebuildrenv<-train$YrSold -pmax(train$YearBuilt, train$YearRemodAdd)

#updating to per 100 sq feet
train$GrLivArea=train$GrLivArea/100
#creating logs
train$GrLivArea.log=log(train$GrLivArea)
train$SalePrice.log=log(train$SalePrice)

train_stepwise <- data.frame(   
Neighborhood= as.factor(train$Neighborhood),
BldgType= as.factor(train$BldgType),
HouseStyle= as.factor(train$HouseStyle),
OverallQual= train$OverallQual,
RoofStyle= as.factor(train$RoofStyle),
Exterior1st= as.factor(train$Exterior1st),
MasVnrArea= train$MasVnrArea,
StoneMas.VnrArea= train$Stone.MasVnrArea,
ExterCond= train$ExterCond,
X1stFlrSF= train$X1stFlrSF,
GrLivArea= train$GrLivArea,
Baths= (train$FullBath+ (train$HalfBath*.5)),
KitchenQual= train$KitchenQual,
TotRmsAbvGrd= train$TotRmsAbvGrd,
Fireplaces= train$Fireplaces,
SalePrice= train$SalePrice, 
yearssincebuildrenv=train$yearssincebuildrenv
)

fit = lm(SalePrice~., data = train_stepwise)
p = ols_step_both_p(fit, prem = 0.05, details = TRUE)
ols_step_backward_p(fit, prem = 0.05, details = TRUE)
ols_step_forward_p(fit, prem = 0.05, details = TRUE)


#boxplot of Sales Condition
ggp <- ggplot(train, aes(SaleCondition, SalesPrice)) +    # Create default ggplot2 boxplot
  geom_boxplot()

fit = lm(SalePrice~., data = train_stepwise)

fit = lm(SalePrice~GrLivArea, data= train)
summary(fit)

#model with raw data
fit = lm(SalePrice~GrLivArea + Neighborhood, data= train)
summary(fit)
#model with logged data
fit = lm(SalePrice.log~GrLivArea.log + Neighborhood, data= train)
summary(fit)


#graph with sepearate linear regression lines
bb <- train %>% ggplot(aes(x = GrLivArea.log, y=SalePrice.log)) + geom_point(aes(fill=Neighborhood),pch=21,size=3, alpha=.5)+
  xlab("Living area 100 Sq Ft.")+
  ylab("Sales Price")+
  ggtitle("Sales Price vs. Sq. Footage of the Living Area ")+
    scale_y_continuous(label=comma)+
  geom_smooth(method=lm,se=FALSE,fullrange=TRUE,
                  aes(color=Neighborhood))
bb

install.packages("olsrr", repos = "https://cran.microsoft.com/")

fit = lm(SalePrice~GrLivArea + Neighborhood, data= train)
k <- ols_prep_cdplot_data(fit)
cooksd<-as.data.frame(ols_prep_outlier_obs(k))
train$cooksd<-cooksd$cd
train$cooksd_outlier<-cooksd$fct_color

fit = lm(SalePrice.log~GrLivArea.log +OverallCond , data= train)
k <- ols_prep_cdplot_data(fit)
cooksd<-as.data.frame(ols_prep_outlier_obs(k))
train$cooksd<-cooksd$cd


library(olsrr)
#residual plots
ols_hadi(fit)
ols_plot_hadi(fit, print_plot = TRUE)
ols_plot_resid_fit(fit, print_plot = TRUE)

ols_plot_cooksd_chart(fit, print_plot = TRUE)
lev_outlier_res<-ols_plot_resid_lev(fit)
train$lev_outlier_res<-lev_outlier_res[["data"]][["fct_color"]]

ggplot(train, aes(x=as.factor(lev_outlier_res), fill=SaleCondition))+
  geom_bar(aes( y=..count../tapply(..count.., ..x.. ,sum)[..x..]), position="stack" , width=0.5) +
  geom_text(aes( y=..count../tapply(..count.., ..x.. ,sum)[..x..], label=scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..]) ),
            stat="count", position=position_stack(0.9), vjust=0.5)+
  xlab('Leverage and Outliers') +
  ylab('Percent of SaleCondition')+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
  theme(axis.text = element_text(size = 7))


#cooksd graph
bb <- train %>% ggplot(aes(x = GrLivArea, y=SalePrice)) + geom_point(aes(fill=lev_outlier_res),pch=21, alpha=1)+
  xlab("Living area 100 Sq Ft.")+
  ylab("Sales Price")+
  ggtitle("Sales Price vs. Sq. Footage of the Living Area ")+
    scale_y_continuous(label=comma)+
  geom_smooth(method=lm, color="black")
bb  + scale_fill_manual(values = c("#6698FF", "#E95839"))

fit = lm(SalePrice.log~GrLivArea.log +OverallCond , data= train)
k <- ols_prep_cdplot_data(fit)
cooksd<-as.data.frame(ols_prep_outlier_obs(k))
train$cooksd<-cooksd$cd

ols_plot_cooksd_chart(fit, print_plot = TRUE)


#outlier and influence with logged data
bb <- train %>% ggplot(aes(x = GrLivArea.log + OverallCond +KitchenQual.int, y=SalePrice.log)) + geom_point(aes(fill=lev_outlier_res),pch=21, alpha=1)+
  xlab("Living area 100 Sq Ft.")+
  ylab("Sales Price")+
  ggtitle("Sales Price vs. Sq. Footage of the Living Area ")+
    scale_y_continuous(label=comma)+
  geom_smooth(method=lm, color="black")
bb # + scale_fill_manual(values = c("#6698FF", "#E95839"))


fit = lm(SalePrice.log~GrLivArea.log + Neighborhood, data= train_stepwise)
summary(fit)

fit = lm(SalePrice.log~GrLivArea.log + Neighborhood + OverallQual + KitchenQual + HouseStyle, data= train)


#plot of linear regression model
bb <- train %>% ggplot(aes(x = GrLivArea.log, y=SalePrice)) + geom_point(aes(fill=Neghborhood_Qual_KitchenQual ,pch=21, size=3, alpha=.5))+
  xlab("Living area 100 Sq Ft.")+
  ylab("Sales Price")+
  ggtitle("Sales Price vs. Sq. Footage of the Living Area ")+
    scale_y_continuous(label=comma)+
  geom_smooth(method=lm, color="black")
bb 
```
```{r Analysis 1}

train$res <- resid(fit)

myhist <- hist(train$res, main="Histogram of Residuals", xlab="Residuals", ylim=c(0, 300))
multiplier <- myhist$counts / myhist$density
mydensity <- density(train$res)
mydensity$y <- mydensity$y * multiplier[1]

myx <- seq(min(train$res), max(train$res), length.out= 100)
mymean <- mean(train$res)
mysd <- sd(train$res)

normal <- dnorm(x = myx, mean = mymean, sd = mysd)
lines(myx, normal * multiplier[1], col = "black", lwd = 2)


```













```{r Analysis 1}

```
